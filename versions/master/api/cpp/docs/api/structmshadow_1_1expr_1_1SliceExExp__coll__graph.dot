digraph "mshadow::expr::SliceExExp&lt; SrcExp, Device, DType, srcdim &gt;"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{mshadow::expr::SliceExExp\l\< SrcExp, Device, DType,\l srcdim \>\n|+ src_\l|+ SliceExExp()\l+ operator=()\l+ operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="slice expression, slice a tensor's channel"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{mshadow::TRValue\< SliceEx\lExp\< SrcExp, Device, DType,\l srcdim \>, Device, srcdim,\l DType \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structmshadow_1_1TRValue.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{mshadow::expr::RValueExp\l\< SliceExExp\< SrcExp, Device,\l DType, srcdim \>, DType \>\n||+ T()\l+ operator+=()\l+ operator+=()\l+ operator-=()\l+ operator-=()\l+ operator*=()\l+ operator*=()\l+ operator/=()\l+ operator/=()\l+ __assign()\l+ __assign()\l+ __assign()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmshadow_1_1expr_1_1RValueExp.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{mshadow::expr::Exp\l\< SliceExExp\< SrcExp,\l Device, DType, srcdim\l \>, DType, type::kRValue \>\n||+ self()\l+ ptrself()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structmshadow_1_1expr_1_1Exp.html",tooltip=" "];
  Node5 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +begin_\n+shape_\n+end_\n+src_shape_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{mshadow::Shape\< srcdim \>\n|+ shape_\l+ kDimension\l+ kSubdim\l|+ Shape()\l+ Shape()\l+ operator[]()\l+ operator[]()\l+ operator==()\l+ operator!=()\l+ FlatTo1D()\l+ FlatTo2D()\l+ Size()\l+ ProdShape()\l+ SubShape()\l+ Slice()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structmshadow_1_1Shape.html",tooltip=" "];
}
