digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="dmlc::Stream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdmlc_1_1Stream.html",tooltip="interface of stream I/O for serialization"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="dmlc::SeekStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdmlc_1_1SeekStream.html",tooltip="interface of i/o stream that support seek"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="dmlc::MemoryFixedSizeStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structdmlc_1_1MemoryFixedSizeStream.html",tooltip="A Stream that operates on fixed region of memory This class allows us to read/write from/to a fixed m..."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="dmlc::MemoryStringStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structdmlc_1_1MemoryStringStream.html",tooltip="A in memory stream that is backed by std::string. This class allows us to read/write from/to a std::s..."];
}
