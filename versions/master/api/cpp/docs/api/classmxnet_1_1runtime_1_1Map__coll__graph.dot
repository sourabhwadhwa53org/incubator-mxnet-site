digraph "mxnet::runtime::Map&lt; K, V, typename, typename &gt;"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{mxnet::runtime::Map\l\< K, V, typename, typename \>\n||+ Map()\l+ Map()\l+ Map()\l+ operator=()\l+ operator=()\l+ Map()\l+ Map()\l+ Map()\l+ Map()\l+ at()\land 10 more...\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Map container of NodeRef->NodeRef in DSL graph. Map implements copy on write semantics,..."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{mxnet::runtime::ObjectRef\n|+ _type_is_nullable\l|+ ObjectRef()\l+ ObjectRef()\l+ same_as()\l+ operator==()\l+ operator!=()\l+ operator\<()\l+ defined()\l+ get()\l+ operator-\>()\l+ unique()\l+ as()\l# get_mutable()\l# DowncastNoCheck()\l# GetDataPtr()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmxnet_1_1runtime_1_1ObjectRef.html",tooltip="Base class of all object reference."];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #data_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{mxnet::runtime::ObjectPtr\l\< mxnet::runtime::Object \>\n||+ ObjectPtr()\l+ ObjectPtr()\l+ ObjectPtr()\l+ ObjectPtr()\l+ ObjectPtr()\l+ ObjectPtr()\l+ ~ObjectPtr()\l+ swap()\l+ get()\l+ operator-\>()\land 10 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmxnet_1_1runtime_1_1ObjectPtr.html",tooltip=" "];
}
