digraph "mxnet::PrimExprNode"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{mxnet::PrimExprNode\n|+ dtype\l+ _type_key\l|+ MXNET_DECLARE_BASE\l_OBJECT_INFO()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Base node of all primitive expressions."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{mxnet::BaseExprNode\n|+ _type_key\l|+ MXNET_DECLARE_BASE\l_OBJECT_INFO()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmxnet_1_1BaseExprNode.html",tooltip="Base type of all the expressions."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{mxnet::runtime::Object\n|+ _type_key\l+ _type_final\l+ _type_child_slots\l+ _type_child_slots_can\l_overflow\l+ _type_index\l# type_index_\l# ref_counter_\l# deleter_\l|+ type_index()\l+ GetTypeKey()\l+ GetTypeKeyHash()\l+ IsInstance()\l+ Object()\l+ Object()\l+ Object()\l+ operator=()\l+ operator=()\l+ TypeIndex2Key()\l+ TypeIndex2KeyHash()\l+ TypeKey2Index()\l+ _GetOrAllocRuntimeTypeIndex()\l+ RuntimeTypeIndex()\l# IncRef()\l# DecRef()\l# GetOrAllocRuntimeTypeIndex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmxnet_1_1runtime_1_1Object.html",tooltip="base class of all object containers."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{mxnet::FloatImmNode\n|+ value\l+ _type_key\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmxnet_1_1FloatImmNode.html",tooltip="Constant floating point literals in the program."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{mxnet::IntImmNode\n|+ value\l+ _type_key\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmxnet_1_1IntImmNode.html",tooltip="Constant integer literals in the program."];
}
