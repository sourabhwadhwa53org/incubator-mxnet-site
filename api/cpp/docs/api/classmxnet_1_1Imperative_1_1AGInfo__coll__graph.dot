digraph "mxnet::Imperative::AGInfo"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{mxnet::Imperative::\lAGInfo\n|+ grad_req\l+ outputs\l+ out_grads\l+ fresh_out_grad\l|+ AGInfo()\l+ Clear()\l+ Get()\l+ Create()\l+ IsNone()\l+ IsVariable()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +state" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{mxnet::OpStatePtr\n||+ get_var()\l+ get_state()\l+ reset()\l+ unique()\l+ operator bool()\l+ Create()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmxnet_1_1OpStatePtr.html",tooltip="Operator state. This is a pointer type, its content is mutable even if OpStatePtr is const."];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +ctx" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{mxnet::Context\n|+ dev_type\l+ dev_id\l+ kMaxDevType\l+ kMaxDevID\l|+ Context()\l+ dev_mask()\l+ real_dev_id()\l+ operator\<()\l+ operator==()\l+ operator!=()\l+ Save()\l+ Load()\l+ Create()\l+ CPU()\l+ GPU()\l+ GetGPUCount()\l+ GPUDriverPresent()\l+ GetGPUStreamsPerWorker()\l+ GetGPUMemoryInformation()\l+ CPUPinned()\l+ CPUShared()\l+ FromString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structmxnet_1_1Context.html",tooltip="Context information about the execution environment."];
}
