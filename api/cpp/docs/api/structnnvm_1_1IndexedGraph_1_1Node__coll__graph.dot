digraph "nnvm::IndexedGraph::Node"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{nnvm::IndexedGraph\l::Node\n|+ weak_ref\l|}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Node data structure in IndexedGraph."];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +inputs" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{dmlc::array_view\< nnvm\l::IndexedGraph::NodeEntry \>\n||+ array_view()\l+ array_view()\l+ array_view()\l+ array_view()\l+ array_view()\l+ array_view()\l+ operator=()\l+ size()\l+ begin()\l+ end()\l+ operator[]()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdmlc_1_1array__view.html",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +source" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{nnvm::Node\n|+ inputs\l+ control_deps\l|+ Node()\l+ Node()\l+ ~Node()\l+ op()\l+ is_variable()\l+ num_outputs()\l+ num_inputs()\l+ Create()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnnvm_1_1Node.html",tooltip="Node represents an operation in a computation graph."];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +attrs" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{nnvm::NodeAttrs\n|+ name\l+ dict\l+ subgraphs\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structnnvm_1_1NodeAttrs.html",tooltip="The attributes of the current operation node. Usually are additional parameters like axis,..."];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +op" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{nnvm::Op\n|+ name\l+ description\l+ arguments\l+ num_inputs\l+ num_outputs\l+ support_level\l+ get_num_outputs\l+ get_num_inputs\l+ attr_parser\l|+ describe()\l+ add_argument()\l+ add_arguments()\l+ set_num_inputs()\l+ set_support_level()\l+ set_num_inputs()\l+ set_num_outputs()\l+ set_num_outputs()\l+ set_attr_parser()\l+ set_attr()\l+ add_alias()\l+ include()\l+ Get()\l+ GetAttr()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnnvm_1_1Op.html",tooltip="Operator structure."];
  Node6 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +parsed" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{any\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +info" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +control_deps" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{dmlc::array_view\< uint32_t \>\n||+ array_view()\l+ array_view()\l+ array_view()\l+ array_view()\l+ array_view()\l+ array_view()\l+ operator=()\l+ size()\l+ begin()\l+ end()\l+ operator[]()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classdmlc_1_1array__view.html",tooltip=" "];
}
